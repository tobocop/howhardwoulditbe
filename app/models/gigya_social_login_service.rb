class GigyaSocialLoginService
  class GigyaNotificationError < Exception;
  end

  attr_accessor :user, :gigya_id, :email, :first_name, :gigya_connection, :avatar_thumbnail_url

  def initialize(params)
    self.gigya_connection = params.fetch(:gigya_connection)
    self.gigya_id = params[:UID]
    self.email = params[:email]
    self.first_name = params[:firstName]
    self.avatar_thumbnail_url = params[:thumbnailURL]

    if gigya_id_is_valid_primary_key
      self.user = User.find(gigya_id.to_i)
    else
      self.user = User.find_by_email(email) || create_user_from_gigya
    end

    user.update_attributes(avatar_thumbnail_url: avatar_thumbnail_url) unless user.avatar_thumbnail_url?
  end

  private

  def create_user_from_gigya
    password = Password.autogenerated
    user = User.create!(email: email, first_name: first_name, password_hash: password.hashed_value, salt: password.salt, avatar_thumbnail_url: avatar_thumbnail_url)

    response = gigya_connection.notify_registration(gigya_id: gigya_id, site_user_id: user.id)
    raise GigyaNotificationError unless response.successful?

    user
  end

  def gigya_id_is_valid_primary_key
    gigya_id.to_i.to_s == gigya_id
  end
end