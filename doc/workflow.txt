=== Development and QA ===

0. Start the story in Tracker.

1. Create a branch for the feature:

git checkout -b feature_name

2. Make your code changes; put a finishes statement with the Pivotal
Tracker story ID as the last statement in the commit message, like so:

[Finishes #55933758]

3. Refresh the repository metadata:

git fetch

4. Bring in the current master:

git rebase master

5. Run the build

build.sh

6. Push the branch to a remote branch

git push origin feature_name

7. Manually change config/deploy.rb:

set :branch, 'feature_name'

8. Deploy the code to the review server (check with Matt first!):

bundle exec cap review deploy:update

9. Restart unicorn:

bundle exec cap review unicorn:restart

10. Mark the story as Delivered.

11. Repeat 2-10 as needed to address defects found during testing.

=== CI ===

1. Switch to master.

git checkout master

2. Merge your branch using one of the following methods, making sure to
add the finishes statement (the Pivotal Tracker story ID) as the last line
of the commit if it's not already there:

	* git merge --squash feature_name 
		Use this method if you'd like all your commits to be condensed to one

	* git rebase -i feature_name
		Use this if you'd like more then 1 commit message represented in the masters log

3. Push to github.

git push origin master

4. Wait for green build on CI.

5. Fix any issues from CI and rebuild if necessary.

=== Production ===

1. Deploy to production and restart unicorn

bundle exec cap production deploy:update
bundle exec cap production unicorn:restart

2. [NOTE: This is TBD and may change] Create and accept a release in tracker that includes the story IDs and is named according to the release folder in production.
